pipeline {
    
    agent { 
        docker { 
            image 'cypress/base:10'
        }
    }
    stages {
        // first stage installs node dependencies and Cypress binary
        stage('build') {
            steps {
                // there a few default environment variables on Jenkins
                // on local Jenkins machine (assuming port 8080) see
                // http://localhost:8080/pipeline-syntax/globals#env
                echo "Running build ${env.BUILD_ID} on ${env.JENKINS_URL}"
    
                sh 'yarn install:all'
                sh 'npx cypress verify'
                sh 'yarn workspace linode-js-sdk build'
            }
        }
        
        stage('start local server') {
            steps {
                // start local server in the background
                // we will shut it down in "post" command block
                sh 'yarn up &'
            }
        }
        // this stage runs end-to-end tests, and each agent uses the workspace
        // from the previous stage
        stage('cypress parallel tests') {
            environment {
                // we will be recording test results and video on Cypress dashboard
                // to record we need to set an environment variable
                // we can load the record key variable from credentials store
                // see https://jenkins.io/doc/book/using/using-credentials/
                CYPRESS_RECORD_KEY = credentials('cypress-example-kitchensink-record-key')
                // because parallel steps share the workspace they might race to delete
                // screenshots and videos folders. Tell Cypress not to delete these folders
                CYPRESS_trashAssetsBeforeRuns = 'false'
            }
        }
        // second tester runs the same command
        stage('test local') {
            steps {
                echo "Running build ${env.BUILD_ID}"
                sh "yarn cy:e2e"
            }
        }
    }// end stages
}